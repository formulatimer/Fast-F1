
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_gallery/plot_speed_traces.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_plot_speed_traces.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_plot_speed_traces.py:

Overlaying speed traces of two laps
======================================

Compare two fastest laps by overlaying their speed traces.

.. GENERATED FROM PYTHON SOURCE LINES 6-21

.. code-block:: default



    import matplotlib.pyplot as plt

    import fastf1.plotting


    # enable some matplotlib patches for plotting timedelta values and load
    # FastF1's default color scheme
    fastf1.plotting.setup_mpl(misc_mpl_mods=False)

    # load a session and its telemetry data
    session = fastf1.get_session(2021, 'Spanish Grand Prix', 'Q')
    session.load()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Request for URL https://ergast.com/api/f1/2021/4/qualifying.json failed; using cached response
    Traceback (most recent call last):
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/connectionpool.py", line 467, in _make_request
        self._validate_conn(conn)
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/connectionpool.py", line 1092, in _validate_conn
        conn.connect()
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/connection.py", line 642, in connect
        sock_and_verified = _ssl_wrap_socket_and_match_hostname(
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/connection.py", line 783, in _ssl_wrap_socket_and_match_hostname
        ssl_sock = ssl_wrap_socket(
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/util/ssl_.py", line 469, in ssl_wrap_socket
        ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/util/ssl_.py", line 513, in _ssl_wrap_socket_impl
        return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/ssl.py", line 501, in wrap_socket
        return self.sslsocket_class._create(
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/ssl.py", line 1041, in _create
        self.do_handshake()
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/ssl.py", line 1310, in do_handshake
        self._sslobj.do_handshake()
    ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)

    During handling of the above exception, another exception occurred:

    Traceback (most recent call last):
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/connectionpool.py", line 790, in urlopen
        response = self._make_request(
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/connectionpool.py", line 491, in _make_request
        raise new_e
    urllib3.exceptions.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)

    The above exception was the direct cause of the following exception:

    Traceback (most recent call last):
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/requests/adapters.py", line 486, in send
        resp = conn.urlopen(
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/connectionpool.py", line 844, in urlopen
        retries = retries.increment(
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/urllib3/util/retry.py", line 515, in increment
        raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='ergast.com', port=443): Max retries exceeded with url: /api/f1/2021/4/qualifying.json (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)')))

    During handling of the above exception, another exception occurred:

    Traceback (most recent call last):
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/requests_cache/session.py", line 255, in _resend
        response = self._send_and_cache(request, actions, cached_response, **kwargs)
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/requests_cache/session.py", line 229, in _send_and_cache
        response = super().send(request, **kwargs)
      File "/home/runner/work/Fast-F1/Fast-F1/fastf1/req.py", line 124, in send
        return super().send(request, **kwargs)
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/requests/sessions.py", line 703, in send
        r = adapter.send(request, **kwargs)
      File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/requests/adapters.py", line 517, in send
        raise SSLError(e, request=request)
    requests.exceptions.SSLError: HTTPSConnectionPool(host='ergast.com', port=443): Max retries exceeded with url: /api/f1/2021/4/qualifying.json (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1129)')))




.. GENERATED FROM PYTHON SOURCE LINES 22-23

First, we select the two laps that we want to compare

.. GENERATED FROM PYTHON SOURCE LINES 23-27

.. code-block:: default


    ver_lap = session.laps.pick_driver('VER').pick_fastest()
    ham_lap = session.laps.pick_driver('HAM').pick_fastest()








.. GENERATED FROM PYTHON SOURCE LINES 28-30

Next we get the telemetry data for each lap. We also add a 'Distance' column
to the telemetry dataframe as this makes it easier to compare the laps.

.. GENERATED FROM PYTHON SOURCE LINES 30-34

.. code-block:: default


    ver_tel = ver_lap.get_car_data().add_distance()
    ham_tel = ham_lap.get_car_data().add_distance()








.. GENERATED FROM PYTHON SOURCE LINES 35-37

Finally, we create a plot and plot both speed traces.
We color the individual lines with the driver's team colors.

.. GENERATED FROM PYTHON SOURCE LINES 37-53

.. code-block:: default


    rbr_color = fastf1.plotting.team_color('RBR')
    mer_color = fastf1.plotting.team_color('MER')

    fig, ax = plt.subplots()
    ax.plot(ver_tel['Distance'], ver_tel['Speed'], color=rbr_color, label='VER')
    ax.plot(ham_tel['Distance'], ham_tel['Speed'], color=mer_color, label='HAM')

    ax.set_xlabel('Distance in m')
    ax.set_ylabel('Speed in km/h')

    ax.legend()
    plt.suptitle(f"Fastest Lap Comparison \n "
                 f"{session.event['EventName']} {session.event.year} Qualifying")

    plt.show()



.. image-sg:: /examples_gallery/images/sphx_glr_plot_speed_traces_001.png
   :alt: Fastest Lap Comparison   Spanish Grand Prix 2021 Qualifying
   :srcset: /examples_gallery/images/sphx_glr_plot_speed_traces_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.128 seconds)


.. _sphx_glr_download_examples_gallery_plot_speed_traces.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_speed_traces.py <plot_speed_traces.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_speed_traces.ipynb <plot_speed_traces.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
